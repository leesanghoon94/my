void setBuildStatus(String message, String state) {
    step([
        $class: "GitHubCommitStatusSetter",
        reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/leesanghoon94/my"],
        contextSource: [$class: "ManuallyEnteredCommitContextSource", context: "ci/jenkins/build-status"],
        errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
        statusResultSource: [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ]
    ]);
}

pipeline {
    agent any
    tools {nodejs "nodejs"}
    triggers {
        githubPush()
    }
    
    stages {

        
        stage('slack start') {
            steps {
             slackSend (color: "#439FE0", message: "Build Started!!: ${env.JOB_NAME} ${env.BUILD_NUMBER}")
            }
        }
        stage ('clean') {
            steps {
                cleanWs()
            }
        }
        stage ('git clone') {
            steps {
                sh  """
                    git clone https://github.com/leesanghoon94/my.git
                    """
            }
        }
        
        stage ('npm') {
            steps {
                sh  """
                    cd my/frontend
                    npm install
                    npm run build
                    """
            }
        }
        
        stage ('deploy ansible') {
            steps {
                sh  """
                    cd my/frontend/ansible
                    ansible-playbook -i inventory playbook.yaml
                    """
            }
        }
        stage ('end') {
            steps {
                slackSend (message:"Build finished - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
            }
        }
    }
}